# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Label of the container job
container-job:
  # Containers must run in Linux based operating systems
  runs-on: ubuntu-latest
  # Docker Hub image that `container-job` executes in
  container: eclipse-temurin:17.0.7_7-jdk-jammy

  # Service containers to run with `container-job`
  services:
    # Label used to access the service container
    postgres:
      # Docker Hub image
      image: postgres
      # Provide the password for postgres
      env:
        POSTGRES_USER: ${POSTGRES_USER:-postgres}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      # Set health checks to wait until postgres has started
      options: >-
        --health-cmd pg_isready
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5

  steps:
  - uses: actions/checkout@v3
  - name: Build with Maven
    run: ./mvnw -B package --file pom.xml

  # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
  - name: Update dependency graph
    uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
